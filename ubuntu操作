###   ls查看目录内容
+  -l 使用长格式列出文件以及目录信息（很整齐）
+  ` ls /user  查看user目录下的所有目录和文件`
+  ` ls -ltr s* /bin       查看bin目录下的所有s开头的可运行文件，最新的排最后`
cp将一个或多个源文件或目录复制到指定目的文件或目录

+ -a  保留链接，文件属性，并赋值目录下的所有内容
+ -r  若给出的源文件是一个目录文件，此时将复制在该目录下的所有的子目录和文件
+ -d 复制时保留链接
+ -f  覆盖已经存在的目标文件不给出提示
+ -i 覆盖之前存在的目标文件时询问用户是否覆盖
+ -p 除覆盖文件外，把修改权限也复制到新文件
###   mv用来为文件或目录改名、或将文件或目录移到其他位置（比cp简单些）
+ mv 目录 目录（重命名）
+ mv 目录 文件位置（移动目录）
###   rm是删除文件
+  rm  文件  删除当前目录下的文件
+  rm -f 文件 删除当前目录下的文件
+  rm -r 目录 递归删除当前目录下的目录
+  rm-rf 目录  递归删除当前目录下的目录（不询问）
+  rm-rf* 将当前目录下的所有目录和文件全部删除
###  mkdir是创建文件
+ mkdir  目录    创建目录
+ mkdir  /目录1/目录2    在目录1 下创建目录2
+ touch  /目录  文件    在目录下创建文件
###  find指令
**查找文件的话find真的是一个十分实用的指令。**
+ find /文件
  + -name ‘*.txt' 查找文件目录下所有以 .txt 结尾的文件
  + -name'????'查找文件目录下所有文件名刚好为4个字符的文件
  + -type（根据文件检索）
    + f    文件
    + d   目录
    + l     链接        
      ` find /usr -type d -name 'python'     检索/usr下所有文件以python 开头的目录` 
+ + 根据时间检索
  + + 最小单位为天
    + -mtime :访问时间
    + -atime: 最后一次文件被读取过的时间
    + -ctime:最后一次文件被改过的时间
  + + 最小为小时        *以上time变为min*
      ` find /usr -type f -ctime 2            检索/usr下两天前被修改过的文件`
###  locate指令
locate指令据说比find指令会快很多
它在linux自动创建的数据库（/var/lib/mlocate/mlocate.db）中搜索指定的文件。
弊端就是这个数据库更新是一天一更，也就是当天你进行的改变它无法查找，我觉得在日常运用中也用不到它的快速，所以了解之后决定pass。
###   whereis命令
这个命令只能用来搜索二进制文件、源代码文件、说明文件。将实在的，真不如find来得简单实在。
二进制文件 -b
源代码文件 -s
说明文件 -m
